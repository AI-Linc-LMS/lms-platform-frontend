import{P as c,a as w}from"./index-FUCvvf_W.js";const l=async(y,o,e,r)=>{var s,i;try{let n={amount:o.toString(),payment_type:(e||c.COURSE).toString().toUpperCase()};const p=(r==null?void 0:r.type_id)||(r==null?void 0:r.assessmentId)||(r==null?void 0:r.workshopId)||(r==null?void 0:r.courseId)||(r==null?void 0:r.subscriptionId)||(r==null?void 0:r.certificationId)||(r==null?void 0:r.consultationId);return p&&(n.type_id=p),e===c.ASSESSMENT&&(r!=null&&r.assessmentId)&&(n={amount:o.toString(),payment_type:"ASSESSMENT",type_id:r.assessmentId}),e===c.WORKSHOP&&(r!=null&&r.workshopId)&&(n={amount:o.toString(),payment_type:"WORKSHOP",type_id:r.workshopId}),(await w.post(`/payment-gateway/api/clients/${y}/create-order/`,n)).data}catch(n){if(n instanceof Error){const p=n;throw new Error(((i=(s=p.response)==null?void 0:s.data)==null?void 0:i.detail)||p.message||"Failed to create order")}else throw new Error("An unknown error occurred")}},u=async(y,o)=>{var e,r;try{const s={order_id:o.order_id,payment_id:o.payment_id,signature:o.signature,payment_type:String(o.payment_type||c.COURSE).toUpperCase(),...o.type_id&&{type_id:o.type_id}};return await w.post(`/payment-gateway/api/clients/${y}/verify-payment/`,s,{headers:{"Content-Type":"application/json",Accept:"application/json"}})}catch(s){if(s instanceof Error){const i=s;throw new Error(((r=(e=i.response)==null?void 0:e.data)==null?void 0:r.detail)||i.message||"Failed to verify payment")}else throw new Error("An unknown error occurred")}};export{l as createOrder,u as verifyPayment};
